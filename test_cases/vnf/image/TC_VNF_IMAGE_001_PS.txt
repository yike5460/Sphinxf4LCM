TC.18	Software Image Retrieval with single vendor release without filter

Sequence:
The VNF images are installed and made available to the VIM. The VIM is able to gather all information and present the information per request on the Vi-Vnfm reference point. Following information should be reported per software image:
•	ID
•	Name
•	Provider
•	Version
•	checksum
•	Container Format
•	Disk Format
•	Create date
•	Update Date
•	Minimal disk size
•	Minimal Memory size
•	Size of the software
•	Status of the software
•	User defined meta Data

Pseudo Code:

Input:
# All required input information are stored in the test case input variable tcInput and includes following information:
    SwImageID

# Test Results are stored in the test case result variable tcResult

Comment: To make the pseudo code simpler to read, in a Python implementation the following code
	tcResult.overallStatus = status
	tcInput.emConfigFile
should be translated to dictionaries
	tcResult[ ‘overallStatus’ ] = status
	tcInput[ ‘emConfigFile’ ]

import logging_module
import VIM
import itertools

# instantiate logger
logger = logging_module.LoggingClass(__name__, "tc_vnf_image_001.txt")

def tc_vnf_image_001():

    logger.write_info("Starting test case 18")

    vnf = VNF.VNFClass(logger)
    vnfm_vnf = VNFM.VNF.VNFM_VNFClass(logger)

    1. Install software images
    logger.write_info("Installing software images")

    tcResult.overallStatus = SUCCESS

    if ( status = VIM.swImage.Installation(SwImageID) ) <> TRUE
		vnfm_vnf.Terminate()
        tcResult.overallStatus = status
        logger.write_error("tc_vnf_image_001 - Execution completed with errors - Unable to install software image")
        logger.close_handlers()
        return ERROR

    2. Retrieve all installed software images
    logger.write_info("Retrieving all installed software images")

    tcResult.softwareImagesList = VIM.swImage.ListSwImage()

    tcResult.softwareImagesList.sort()
    tcInput.softwareImagesList.sort()

    for tcResult.image, tcInput.image in itertools.izip_longest(tcResult.softwareImagesList, tcInput.softwareImagesList):
        if tcResult.image <> tcInput.image :
			vnfm_vnf.Terminate()
            tcResult.overallStatus = FAILED
            logger.write_error("tc_vnf_image_001 - Execution completed with errors - Software image not found")
            logger.write_error("Found image %s, expected %s" % (tcResult.image, tcInput.image))
            logger.close_handlers()
            return ERROR

    logger.write_info("tc_vnf_image_001 - Execution completed successfully")

    logger.close_handlers()

    return tcResult.overallStatus
