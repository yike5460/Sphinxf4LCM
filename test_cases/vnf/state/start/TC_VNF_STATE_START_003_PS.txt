TC_VNF_STATE_START_003 VNF Start in state Instantiated

Sequence:
1. Instantiate VNF
2. Validate VNF is in state "Instantiated – not configured"
3. Start the traffic load
4. Validate no traffic goes through
5. Start the VNF
6. Validate the start fails and VNF state is still Instantiated
7. Validate no traffic got through
8. Stop Traffic Load
9. Terminate VNF

Pseudo Code:

Input
# All required input information are stored in the test case input variable tcInput and includes following information:
    SwImageID
    Traffic Configuration Parameter -> trafficConfigParameter

# Test Results are stored in the test case result variable tcResult

import logging_module
import VNFRECORD
import VNFM.VNF
import Traffic

# instantiate logger
logger = logging_module.LoggingClass(__name__, "TC_VNF_STATE_START_003.txt")

def TC_VNF_STATE_START_003(tcInput):

    logger.write_info("Starting TC_VNF_STATE_START_003")

    vnfrecord = VNFRECORD.VNFRECORDClass(logger)
    vnfm_vnf = VNFM.VNF.VNFM_VNFClass(logger)
    traffic = Traffic.TrafficClass(logger)

    tcResult.overallStatus = SUCCESS

    vnfRecord = vnfrecord.Create()

    1. Instantiate VNF
    logger.write_info("Instantiating VNF")

    status = vnfm_vnf.Instantiate( vnfRecord, tcInput.SwImageID )
    if status <> TRUE :
        tcResult.overallStatus = status
        logger.write_error("TC_VNF_STATE_START_003 execution completed with failure at instantiating the VNF")
        logger.close_handlers()
        return ERROR

    2. Validate VNF is in state "Instantiated – not configured"
    logger.write_info("Validating VNF is in state 'Instantiated – not configured'")

    #allow the VNF to get into the instantiated-not-configured state
    wait_time = MAX_VNF_INSTANTIATION_TIME
    while ( vnfState = vnfm_vnf.GetVNFState( vnfRecord ) ) <> VNF_STATE_NOT_CONFIGURED :
        if vnfState == VNF_STATE_ERROR :
            tcResult.overallStatus = vnfState
            logger.write_error("TC_VNF_STATE_START_003 execution completed with failure at validating the VNF is in 'Not-Configured' state")
            logger.close_handlers()
            return ERROR
        if wait_time-- == 0 :
            tcResult.overallStatus = VNF_STATE_ERROR
            logger.write_error("TC_VNF_STATE_START_003 execution completed with failure at waiting for the VNF to be in 'Not-Configured' state")
            logger.close_handlers()
            return ERROR
        time.sleep( 1 sec )

    3. Start the traffic load
    logger.write_info("Starting the traffic load")

    if (status = traffic.ConfigTrafficLoad( NORMAL_TRAFFIC_LOAD, tcInput.trafficConfigParameter )) <> TRUE :
        vnfm_vnf.Terminate( vnfRecord )
        tcResult.overallStatus = status
        logger.write_error("TC_VNF_STATE_START_003 execution completed with failure at configuring normal traffic load")
        logger.close_handlers()
        return ERROR

    if (status = traffic.StartTraffic()) <> TRUE :
        vnfm_vnf.Terminate( vnfRecord )
        tcResult.overallStatus = status
        logger.write_error("TC_VNF_STATE_START_003 execution completed with failure at starting traffic")
        logger.close_handlers()
        return ERROR

    4. Validate no traffic goes through
    logger.write_info("Validating no traffic goes through")

    if (status = traffic.DoesTrafficFlow()) <> FALSE :
        vnfm_vnf.Terminate( vnfRecord )
        tcResult.overallStatus = status
        logger.write_error("TC_VNF_STATE_START_003 execution completed with failure at validating no traffic flows")
        logger.close_handlers()
        return ERROR

    5. Start the VNF
    logger.write_info("Starting the VNF")

    status = vnfm_vnf.Start( vnfRecord )

    6. Validate the start fails and VNF state is still Instantiated
    logger.write_info("Validating the start fails and VNF state is still Instantiated")

    if  status <> False :
        vnfm_vnf.Terminate( vnfRecord )
        tcResult.overallStatus = status
        logger.write_error("TC_VNF_STATE_START_003 execution completed with failure at validating the VNF start failed")
        logger.close_handlers()
        return ERROR

    if ( vnfState = vnfm_vnf.GetVNFState( vnfRecord ) ) <> VNF_STATE_NOT_CONFIGURED :
        vnfm_vnf.Terminate( vnfRecord )
        tcResult.overallStatus = vnfState
        logger.write_error("TC_VNF_STATE_START_003 execution completed with failure at validating the VNF is in 'Not-Configured' state")
        logger.close_handlers()
        return ERROR

    7. Validate no traffic got through
    logger.write_info("Validating no traffic got through")

    if (status = traffic.DoesTrafficFlow()) <> FALSE :
        vnfm_vnf.Terminate( vnfRecord )
        tcResult.overallStatus = status
        logger.write_error("TC_VNF_STATE_START_003 execution completed with failure at validating no traffic flows")
        logger.close_handlers()
        return ERROR

    8. Stop Traffic Load
    logger.write_info("Stopping traffic load")

    if (status = traffic.Stop()) <> TRUE :
        vnfm_vnf.Terminate( vnfRecord )
        tcResult.overallStatus = status
        logger.write_error("TC_VNF_STATE_START_003 execution completed with failure at stopping traffic")
        logger.close_handlers()
        return ERROR

    9. Terminate VNF
    logger.write_info("Terminating VNF")

    vnfm_vnf.Terminate( vnfRecord )

    vnfrecord.Delete()

    logger.write_info("TC_VNF_STATE_START_003 execution completed successfully")

    logger.close_handlers()

    return tcResult.overallStatus
