TC.14	VNFD:VDU Storage Unit validation

Sequence:
1.	Verify required storage characteristics (e.g. size), including Key Quality Indicators (KQIs) for performance and reliability/availability
vnfd:vdu:storage_requirement
2.	Verify bandwidth value for which VDU had been developed, optimized or tested from storage perspective
vnfd:vdu:rdma_support_bandwidth

Pseudo Code:

Input:
# All required input information are stored in the test case input variable tcInput and includes following information:
	VNFD File Link  vnfdFile

# Test Results are stored in the test case result variable tcResult

Comment: To make the pseudo code simpler to read, in a Python implementation the following code
	tcResult.overallStatus = status
	tcInput.emConfigFile
should be translated to dictionaries
	tcResult[ ‘overallStatus’ ] = status
	tcInput[ ‘emConfigFile’ ]

import logging_module

# instantiate logger
logger = logging_module.LoggingClass(__name__, "test_case_14.txt")

def test_case_14():

    logger.write_info("Starting test case 14")

    vnf = VNF.VNFClass(logger)
    vnfm_vnf = VNFM.VNF.VNFM_VNFClass(logger)

    1.	Verify required storage characteristics (e.g. size), including Key Quality Indicators (KQIs) for performance and reliability/availability
    logger.write_info("Verifying vnfd:vdu:storage_requirement")

    tcResult.overallStatus = SUCCESS

    if tcInput.vnfd.vdu.storage_requirement <> VNFD.VDU.storage.storage_requirement :
        tcResult.overallStatus = FAILED
        logger.write_error("Test case 14 - Execution completed with errors - Unable to validate storage_requirement parameter")
        logger.close_handlers()
        return ERROR

    2.	Verify bandwidth value for which VDU had been developed, optimized or tested from storage perspective
    logger.write_info("Verifying vnfd:vdu:rdma_support_bandwidth")

    if tcInput.vnfd.vdu.rdma_support_bandwidth <> VNFD.VDU.rdma_support_bandwidth :
        tcResult.overallStatus = FAILED
        logger.write_error("Test case 14 - Execution completed with errors - Unable to validate rdma_support_bandwidth parameter")
        logger.close_handlers()
        return ERROR

    logger.write_info("Test case 14 - Execution completed successfully")

    logger.close_handlers()

    return tcResult.overallStatus